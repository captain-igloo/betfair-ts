/**
 * Copyright 2020 Colin Doig.  Distributed under the MIT license.
 */
import JsonMember from '../JsonMember';
export interface IStatementLegacyDataOptions {
    avgPrice?: number;
    betSize?: number;
    betType?: string;
    betCategoryType?: string;
    commissionRate?: string;
    eventId?: number;
    eventTypeId?: number;
    fullMarketName?: string;
    grossBetAmount?: number;
    marketName?: string;
    marketType?: string;
    placedDate?: Date | string;
    selectionId?: number;
    selectionName?: string;
    startDate?: Date | string;
    transactionType?: string;
    transactionId?: number;
    winLose?: string;
}
export default class StatementLegacyData extends JsonMember {
    private avgPrice?;
    private betSize?;
    private betType?;
    private betCategoryType?;
    private commissionRate?;
    private eventId?;
    private eventTypeId?;
    private fullMarketName?;
    private grossBetAmount?;
    private marketName?;
    private marketType?;
    private placedDate?;
    private selectionId?;
    private selectionName?;
    private startDate?;
    private transactionType?;
    private transactionId?;
    private winLose?;
    constructor(options: IStatementLegacyDataOptions);
    toJson(): IStatementLegacyDataOptions;
    getAvgPrice(): number | undefined;
    setAvgPrice(avgPrice: number): void;
    getBetSize(): number | undefined;
    setBetSize(betSize: number): void;
    getBetType(): string | undefined;
    setBetType(betType: string): void;
    getBetCategoryType(): string | undefined;
    setBetCategoryType(betCategoryType: string): void;
    getCommissionRate(): string | undefined;
    setCommissionRate(commissionRate: string): void;
    getEventId(): number | undefined;
    setEventId(eventId: number): void;
    getEventTypeId(): number | undefined;
    setEventTypeId(eventTypeId: number): void;
    getFullMarketName(): string | undefined;
    setFullMarketName(fullMarketName: string): void;
    getGrossBetAmount(): number | undefined;
    setGrossBetAmount(grossBetAmount: number): void;
    getMarketName(): string | undefined;
    setMarketName(marketName: string): void;
    getMarketType(): string | undefined;
    setMarketType(marketType: string): void;
    getPlacedDate(): Date | undefined;
    setPlacedDate(placedDate: Date): void;
    getSelectionId(): number | undefined;
    setSelectionId(selectionId: number): void;
    getSelectionName(): string | undefined;
    setSelectionName(selectionName: string): void;
    getStartDate(): Date | undefined;
    setStartDate(startDate: Date): void;
    getTransactionType(): string | undefined;
    setTransactionType(transactionType: string): void;
    getTransactionId(): number | undefined;
    setTransactionId(transactionId: number): void;
    getWinLose(): string | undefined;
    setWinLose(winLose: string): void;
}
