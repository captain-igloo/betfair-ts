/**
 * Copyright 2020 Colin Doig.  Distributed under the MIT license.
 */
import JsonMember from '../JsonMember';
import MarketStatus from '../sport/enum/MarketStatus';
import KeyLineDescription, { IKeyLineDescriptionOptions } from '../sport/KeyLineDescription';
import Runner, { IRunnerOptions } from '../sport/Runner';
export interface IMarketBookOptions {
    marketId: string;
    isMarketDataDelayed: boolean;
    status?: MarketStatus | string;
    betDelay?: number;
    bspReconciled?: boolean;
    complete?: boolean;
    inplay?: boolean;
    numberOfWinners?: number;
    numberOfRunners?: number;
    numberOfActiveRunners?: number;
    lastMatchTime?: Date | string;
    totalMatched?: number;
    totalAvailable?: number;
    crossMatching?: boolean;
    runnersVoidable?: boolean;
    version?: number;
    runners?: Array<Runner | IRunnerOptions>;
    keyLineDescription?: KeyLineDescription | IKeyLineDescriptionOptions;
}
export default class MarketBook extends JsonMember {
    private marketId;
    private isMarketDataDelayed;
    private status?;
    private betDelay?;
    private bspReconciled?;
    private complete?;
    private inplay?;
    private numberOfWinners?;
    private numberOfRunners?;
    private numberOfActiveRunners?;
    private lastMatchTime?;
    private totalMatched?;
    private totalAvailable?;
    private crossMatching?;
    private runnersVoidable?;
    private version?;
    private runners?;
    private keyLineDescription?;
    constructor(options: IMarketBookOptions);
    toJson(): IMarketBookOptions;
    getMarketId(): string;
    setMarketId(marketId: string): void;
    getIsMarketDataDelayed(): boolean;
    setIsMarketDataDelayed(isMarketDataDelayed: boolean): void;
    getStatus(): MarketStatus | undefined;
    setStatus(status: MarketStatus): void;
    getBetDelay(): number | undefined;
    setBetDelay(betDelay: number): void;
    getBspReconciled(): boolean | undefined;
    setBspReconciled(bspReconciled: boolean): void;
    getComplete(): boolean | undefined;
    setComplete(complete: boolean): void;
    getInplay(): boolean | undefined;
    setInplay(inplay: boolean): void;
    getNumberOfWinners(): number | undefined;
    setNumberOfWinners(numberOfWinners: number): void;
    getNumberOfRunners(): number | undefined;
    setNumberOfRunners(numberOfRunners: number): void;
    getNumberOfActiveRunners(): number | undefined;
    setNumberOfActiveRunners(numberOfActiveRunners: number): void;
    getLastMatchTime(): Date | undefined;
    setLastMatchTime(lastMatchTime: Date): void;
    getTotalMatched(): number | undefined;
    setTotalMatched(totalMatched: number): void;
    getTotalAvailable(): number | undefined;
    setTotalAvailable(totalAvailable: number): void;
    getCrossMatching(): boolean | undefined;
    setCrossMatching(crossMatching: boolean): void;
    getRunnersVoidable(): boolean | undefined;
    setRunnersVoidable(runnersVoidable: boolean): void;
    getVersion(): number | undefined;
    setVersion(version: number): void;
    getRunners(): Runner[] | undefined;
    setRunners(runners: Runner[]): void;
    getKeyLineDescription(): KeyLineDescription | undefined;
    setKeyLineDescription(keyLineDescription: KeyLineDescription): void;
}
